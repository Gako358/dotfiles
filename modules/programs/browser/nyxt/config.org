* Nyxt browser configuration

** Appearance

Dark mode

#+BEGIN_SRC lisp
  (define-configuration browser
      ((theme (make-instance 'theme:+dark-theme+))))
#+END_SRC

Darkened mode is a feature that applies a dark style to web pages themselves:

#+BEGIN_SRC lisp
  (define-configuration buffer
      ((default-modes (append '(darkened-mode) %slot-value%))))
#+END_SRC

** Bookmarks

#+begin_src lisp
  ;; Define some initial bookmarks
  (define-configuration nyxt/mode/bookmark:bookmark-mode
      ((nyxt/mode/bookmark:bookmarks
  	(list (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://duckduckgo.com"
  			     :title "DuckDuckGo"
  			     :tags '("search" "privacy"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://github.com"
  			     :title "GitHub"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://github.com/search?type=code&auto_enroll=true"
  			     :title "GitHub Search"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://github.com/copilot"
  			     :title "Copilot"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			   :url "https://app.cachix.org/"
  			   :title "Cachix"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			   :url "https://search.nixos.org/packages"
  			   :title "NixPkgs"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			   :url "https://configure.zsa.io/my_layouts"
  			   :title "Oryx"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			   :url "https://home-manager-options.extranix.com/"
  			   :title "Home-Manager"
  			     :tags '("development" "code"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://reddit.com"
  			     :title "Reddit"
  			     :tags '("social" "news"))
  	      (make-instance 'nyxt/mode/bookmark:bookmark
  			     :url "https://en.wikipedia.org"
  			     :title "Wikipedia"
  			     :tags '("reference" "knowledge"))))))


  ;; Add a keybinding for bookmarks in vi normal mode
  (define-configuration nyxt/mode/vi:vi-normal-mode
      ((keymap-scheme
        (let ((scheme %slot-value%))
  	(define-key scheme
              "space b" 'nyxt/mode/bookmark:bookmark-open)
  	scheme))))
#+end_src

** General
#+begin_src lisp
  ;;; misc settings
  (define-configuration browser
      ;; never restore session
      ((restore-session-on-startup-p nil)
       ;; set external editor
       (external-editor-program '("handlr" "open"))))
#+end_src

Setup vim-motion

#+BEGIN_SRC lisp
  ;; Enable vi-mode on startup
  (define-configuration buffer
      ((default-modes (append '(vi-mode) %slot-value%))))
#+END_SRC

** Pass

Setup Nyxt using password-store

#+BEGIN_SRC lisp
  (define-configuration nyxt/mode/password:password-mode
      ((nyxt/mode/password:password-interface
        (make-instance 'password:password-store-interface))))
#+END_SRC

** Search

Setup search engines

#+BEGIN_SRC lisp
  (define-configuration buffer
      ((search-engines
        (list (make-instance 'search-engine
    			   :name "DuckDuckGo"
    			   :shortcut "d"
    			   :search-url "https://duckduckgo.com/?q=~a&kp=1&kl=us-en&kaj=m&k1=-1&kd=1&t=h_"
    			   :fallback-url "https://duckduckgo.com/")
    	    (make-instance 'search-engine
    			   :name "Google"
    			   :shortcut "g"
    			   :search-url "https://google.com/search?q=~a"
    			   :fallback-url "https://google.com/")
    	    (make-instance 'search-engine
    			   :name "Wikipedia"
    			   :shortcut "w"
    			   :search-url "https://en.wikipedia.org/w/index.php?search=~a"
    			   :fallback-url "https://en.wikipedia.org/")))))

  ;; Explicitly set default search engine
  (define-configuration prompt-buffer
      ((default-search-engine "DuckDuckGo")))
#+END_SRC
